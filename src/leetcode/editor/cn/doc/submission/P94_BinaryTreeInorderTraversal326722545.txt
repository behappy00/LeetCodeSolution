/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();

        if(root==null){
            return res;
        }

        Stack<TreeNode> st = new Stack<>();

        TreeNode node = root;
        while(node!=null || st.size()>0){

            while(node!=null){
                st.push(node);
                node = node.left;
            }

            TreeNode cur = st.pop();
            res.add(cur.val);
            
            node = cur.right == null ? null : cur.right;

        }

        return res;
    }
}
//runtime:0 ms
//memory:39.5 MB
